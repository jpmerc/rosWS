<launch>

  <arg name="robot_label" value="$(optenv TURTLEBOT_LABEL robot_0)" />
  <arg name="base"       value="$(optenv TURTLEBOT_BASE create)"/>  <!-- create, rhoomba -->
  <arg name="battery"    value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
  <arg name="hokuyo_port" value="$(optenv HOKUYO_PORT ttyACM0)"/> <!-- HOKUYO_PORT set by custom_navigation.sh -->
  <arg name="stacks"     value="$(optenv TURTLEBOT_STACKS circles)"/>  <!-- circles, hexagons -->
  <arg name="3d_sensor"  value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro -->
  <arg name="simulation" value="$(optenv TURTLEBOT_SIMULATION false)"/>
  <arg name="urdf_file" default="$(find xacro)/xacro.py '$(find lvsnbot_description)/robots/$(arg base)_$(arg stacks)_$(arg 3d_sensor).urdf.xacro'" />
 

  <param name="/use_sim_time" value="$(arg simulation)"/>
  <param name="turtlebot_node/gyro_scale_correction" value="1.062802"/>
  <param name="turtlebot_node/odom_angular_scale_correction" value="1.044974"/>
  <param name="robot_description" command="$(arg urdf_file)" /> 
  <!--<param name="robot/name" value="$(arg robot_label)"/>
  <param name="robot/type" value="turtlebot"/> -->
  
  

<group ns="$(arg robot_label)">

  
 <!-- Launch Hokuyo Range Finder -->
  <node pkg="tf" type="static_transform_publisher" name="myLaserTF" args="0 0 0.075 0 0 0 /$(arg robot_label)/base_link /$(arg robot_label)/myLaser 100 " />
  <node name="hokuyo" pkg="hokuyo_node" type="hokuyo_node" respawn="false" output="screen">
    <param name="calibrate_time" type="bool" value="true"/> 
    <param name="port" type="string" value="/dev/$(arg hokuyo_port)"/> 
    <param name="intensity" type="bool" value="false"/>
    <param name="min_angle" type="double" value="-2.09"/>
    <param name="min_angle" type="double" value="2.09"/>
    <param name="frame_id" type="string" value="/$(arg robot_label)/myLaser"/> 
    <param name="use_rep_117" type="bool" value="true"/>
  </node>
  
  
  <!-- Turtlebot Robot -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="1.0" />
    <param name="tf_prefix" value="$(arg robot_label)" />
  </node>
  
  <!-- Turtlebot Mobile Base -->
  <node pkg="create_node" type="turtlebot_node.py" name="turtlebot_node" respawn="true" args="--respawnable">
    <param name="has_gyro" value="true" />
    <param name="bonus" value="false" />
    <param name="update_rate" value="30.0" />
    <param name="port" value="/dev/ttyUSB0" />
    <remap from="cmd_vel" to="mobile_base/commands/velocity" />
    <remap from="turtlebot_node/sensor_state" to="mobile_base/sensors/core" />
    <remap from="imu/data" to="mobile_base/sensors/imu_data" />
    <remap from="imu/raw" to="mobile_base/sensors/imu_data_raw" />
  </node>

</group>
</launch>
